openapi: 3.0.1
info:
  title: Limber Cross API - Integração de Vendas
  version: '2.0'
  description: "A API permite a integração de vendas com a plataforma Limber via API.\n\
    \n## Informações Gerais\n- A documentação esta referenciada para testes. Em produção\
    \ troque \"testescard\" por \"card\".\n- Todos os endpoints (exceto autenticação)\
    \ exigem um token JWT válido no cabeçalho `Authorization: Bearer {token}`.\n\n\
    ## Fluxo:\n- **1** – Autenticação\n- **2** – Consulta SKU\n- **3** – Consulta\
    \ de calendario (Geral ou do Ingresso)\n- **4** – Consulta de estoque do SKU (Estoque\
    \ ou Estoque agrupado)\n- **5** – Consulta de preço do SKU\n- **6** – Reserva\n\
    - **7** – Confirmação (Pagamento/Inutlização):\n  - **7.1** – Inutilização\n \
    \ - **7.2** – Confirmação:\n    - **7.2.1** – Pagamento manual\n    - **7.2.2**\
    \ – Pagamento na adquirente\n    - **7.2.3** – Gerar link de pagameto\n- **8**\
    \ - Remarcação\n- **9** – Pedido de cancelamento\n- **10** – Cancelamento:\n \
    \ - **10.1** – Cancelamento manual\n  - **10.2** – Cancelamentona adquirente\n\
    \  - **10.2.1** – Verificar cancelamento na adquirente\n"
servers:
- url: https://testescard.limbersoftware.com.br
  description: Ambiente de testes (padrão)
tags:
- name: Autenticação
  description: Endpoints para login e obtenção de token
- name: Consultas
  description: Rotas para consulta de SKUs, disponibilidade e preços
- name: Reserva/Venda
  description: Criação de reservas / integração de vendas
- name: Leitura/Utilização
  description: QRCode e consultas de utilização
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: Campo idParceiro 123 não existe para o usuário atual
    AuthRequest:
      type: object
      required:
      - usuario
      - senha
      properties:
        usuario:
          type: string
          description: Usuário gerado pela Limber
          example: Limber
        senha:
          type: string
          description: Senha gerada pela Limber
          example: Software
    AuthResponse:
      type: object
      properties:
        codigo:
          type: integer
          example: 559
          description: Id do usuário
        nivel:
          type: integer
          example: 30
          description: Nivel de acesso do usuario (fixo)
        nome:
          type: string
          description: Nome do integrador
          example: API ABCD
        usuario:
          type: string
          description: Usuário de Login
          example: apireservas
        token:
          type: string
          description: Berer token para usar nas outras requisições
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        email:
          type: string
          description: E-mail cadastrado
          example: apireservas
        parceiros:
          type: array
          items:
            type: object
            properties:
              idparceiro:
                type: integer
                description: Id utilizado nas outras requisições
                example: 2402
              nomeparceiro:
                type: string
                description: Nome do estabelecimeto do integrador
                example: API - Limber
              tipoparceiro:
                type: string
                description: Não utilizado
                example: IA
              pedido_de_cancelamento:
                type: boolean
                description: Não utilizado
                example: false
              visualiza_relatorios_venda:
                type: integer
                description: Não utilizado
                example: 0
              altera_cadastro:
                type: boolean
                description: Não utilizado
                example: false
              sac:
                type: boolean
                description: Não utilizado
                example: false
              integra_venda:
                type: boolean
                description: Não utilizado
                example: false
              desct_central_vendas:
                type:
                - string
                - 'null'
                description: Não utilizado
                example: null
              administrador:
                type: boolean
                description: Não utilizado
                example: false
              remarcacao:
                type: boolean
                description: Se o estabelecimento pode fazer remarcação
                example: true
              cancelamento_de_venda:
                description: Se estabelecimento pode fazer remarcação
                type: boolean
                example: false
    SKUCategory:
      type: object
      properties:
        idCategoria:
          type: integer
          example: 3831
        nomeCategoria:
          type: string
          example: API - Adulto 2222
        descricaoCategoria:
          type: string
          nullable: true
          example: null
        validaIdade:
          type: string
          nullable: true
          example: S
        idadeInicial:
          type: integer
          nullable: true
          example: 17
        idadeFinal:
          type: integer
          nullable: true
          example: null
        privativo:
          type: string
          nullable: true
          example: N
        aPartirDe:
          type: string
          nullable: true
          example: N
        valorUnitario:
          type: number
          example: 0.11
        ordem:
          type: integer
          nullable: true
          example: 0
        ocupaAssento:
          type: string
          nullable: true
          example: N
        moradorLocal:
          type: boolean
          example: false
        paises:
          type: array
          items:
            type: integer
          example:
          - 1
          - 12
          - 178
        convenios:
          type: array
          items:
            type: object
            properties:
              convenio:
                type: integer
                example: 1
              nome:
                type: string
                example: Criança
              descricao:
                type: string
                nullable: true
                example: null
              coletaObs:
                type: boolean
                example: false
        coletaFoto:
          type: boolean
          example: true
    Receita:
      type: object
      description: Detalhes específicos de uma receita/serviço dentro de um ingresso.
      properties:
        idReceita:
          type: integer
          format: int32
          description: Identificador da receita/serviço.
          example: 101
        valor:
          type: number
          format: float
          description: Valor da receita.
          example: 50.0
        dataVisita:
          type: string
          format: date
          description: Data da visita ou uso da receita/serviço.
          example: '2000-01-01'
        localEmbarque:
          type: integer
          format: int32
          description: Código do local de embarque (se aplicável).
          example: 1
        temporada:
          type: integer
          format: int32
          description: Código da temporada (se aplicável).
          example: 5
        horarioStr:
          type: string
          description: Horário do serviço como string (exemplo, "00:01 - 14:00").
          example: 00:01 - 14:00
        progHorario:
          type: integer
          format: int32
          description: Código do horário de programação.
          example: 1
        progSeq:
          type: integer
          format: int32
          description: Sequência da programação.
          example: 1
        idiomaEscolhido:
          type: string
          description: Idioma escolhido para o serviço.
          example: PT
        sessao:
          type: integer
          format: int32
          description: Número da sessão (se aplicável).
          example: 1
        poltrona:
          type: integer
          format: int32
          description: Número da poltrona/assento (se aplicável).
          example: 15
        placa:
          type: string
          description: Placa do veículo (se aplicável).
          example: ABC1234
    SKUItem:
      type: object
      properties:
        sku:
          type: integer
          example: 4669
        nome:
          type: string
          example: Acesso ao Parque - Completo
        slug:
          type: string
          example: acesso-ao-parque
        ativo:
          type: string
          example: S
        perfil:
          type: integer
          example: 556
        qtdMaxIngressos:
          type: integer
          nullable: true
          example: null
        qtdMinIngressos:
          type: integer
          nullable: true
          example: null
        qtdMaxIngressosTurismo:
          type: integer
          nullable: true
          example: null
        qtdMinIngressosTurismo:
          type: integer
          nullable: true
          example: null
        qtdMaxIngTotalCarrinho:
          type: integer
          nullable: true
          example: null
        qtdMinIngTotalCarrinho:
          type: integer
          nullable: true
          example: null
        configPagamento:
          type: integer
          example: 61
        metodosPag:
          type: array
          items:
            type: string
          example:
          - CARTAO
          - A FATURAR
          - PIX
          - DINHEIRO
        permiteInfoVisitanteDepois:
          type: string
          example: S
        diasLimiteParaVisitantes:
          type: integer
          example: 1
        descricao:
          type: string
          example: Desfrute de um evento emocionante com nosso ingresso exclusivo.
            Entretenimento de alta qualidade, atmosfera vibrante e experiências únicas
            esperam por você.
        textoImpressao:
          type: string
          example: Esse ingresso é valido por pessoa, cada qr code deve ser validado
            individualmente
        textoImpressaoHorario:
          type: string
          example: 'Semana: 08:00 as 12 e 13:00 as 18

            Fim de semana: Das 10:00 as 19:00'
        estabelecCad:
          type: integer
          example: 1349
        prefixoQrcode:
          type: string
          example: API
        controlaHorarios:
          type: string
          example: N
        controleDisp:
          type: string
          example: V
        habilitaValorZerado:
          type: string
          example: S
        consultaPrecosSazonais:
          type: string
          example: S
        mostraLabelAPartirDe:
          type: string
          example: S
        mostraHorarioFinal:
          type: string
          example: S
        mostraVagasDisp:
          type: string
          example: S
        mostraHorEsgotados:
          type: string
          example: S
        coletaDadosVisitantes:
          type: array
          items:
            type: integer
          example:
          - 2
          - 4
          - 6
          - 8
          - 10
          - 12
          - 14
          - 16
        coletaDadosVisitantesMoradorLocal:
          type: array
          items:
            type: integer
          example:
          - 2
          - 4
        menorIdadeNecessitaAceiteResponsavel:
          type: boolean
          example: true
        solicitaContatoEmergencia:
          type: boolean
          example: true
        _gerarQrCode:
          type: boolean
          example: true
        categorias:
          type: array
          items:
            $ref: '#/components/schemas/SKUCategory'
        imagens:
          type: array
          items:
            type: object
            properties:
              urlImg:
                type: string
                example: https://cdntestes.limbersoftware.com.br/img/bilhetes/4669/Vd2EPDCCzE.webp
              mostrarGaleria:
                type: boolean
                example: true
              mostrarHome:
                type: boolean
                example: true
              vibrantColor:
                type: string
                example: '#7f7f7f'
        locaisEmbarque:
          type: array
          items:
            type: object
            properties:
              localEmbarque:
                type: integer
                example: 2
              descricao:
                type: string
                example: Aberta 24h
              confirmaCredenciamento:
                type: string
                example: N
              nomeLocalEmbarque:
                type: string
                example: Portao Principal
              idReceita:
                type: integer
                example: 3424
        sessoes:
          type: array
          items:
            type: object
            properties:
              nome:
                type: string
                example: Sessao principal
              descricao:
                type: string
                example: 2 em 2 horas
              idReceita:
                type: integer
                example: 3424
              idSessao:
                type: integer
                example: 1
        temporadas:
          type: array
          items:
            type: object
            properties:
              temporada:
                type: integer
                example: 1
              nome:
                type: string
                example: Alta Temporada
              preco:
                type: number
                example: 20
              corCalendario:
                type: string
                example: '#ff0000'
    DisponibilidadeCalendarioItem:
      type: object
      properties:
        data:
          type: string
          format: date-time
          example: AAAA-MM-DDTHH:MM:SS.000Z
        temporada:
          type: integer
          example: 1
        disponivel:
          type: integer
          example: 1000
        locaisEmbarque:
          type: array
          items:
            type: object
            properties:
              codigo:
                type: integer
                example: 1
              disponivel:
                type: integer
                example: 3
        corTemporada:
          type: string
          example: '#37ff00'
        nomeTemporada:
          type: string
          example: Disponivel
        altaProcura:
          type: string
          nullable: true
    DisponibilidadeEstoqueItem:
      type: object
      properties:
        temporada:
          type: integer
          example: 2
        prog_horario:
          type: integer
          example: 55
        prog_seq:
          type: integer
          example: 68
        horaembarqueinicial:
          type: string
          format: date-time
          example: AAAA-MM-DDTHH:MM:SS.000Z
        horaembarquefinal:
          type: string
          format: date-time
          example: AAAA-MM-DDTHH:MM:SS.000Z
        disponivel:
          type: integer
          example: 36
        descricao:
          type: string
          example: <descrição da vaga>
        idiomas:
          type: string
          example: Português
    ReservaItem:
      type: object
      description: Item de ingresso individual dentro da reserva.
      required:
      - seq
      - sku
      - idCategoria
      - valorUnitario
      properties:
        seq:
          type: integer
          format: int32
          description: Sequência do item na lista de ingressos (começa em 0 ou 1).
          example: 1
        idPais:
          type: integer
          format: int32
          description: ID do país do visitante.
          example: 1
        uf:
          type: string
          description: Unidade Federativa (estado) do visitante (se Brasil).
          example: RJ
        sku:
          type: integer
          format: int32
          description: Código do SKU (Stock Keeping Unit) do ingresso.
          example: 12345
        idCategoria:
          type: integer
          format: int32
          description: ID da categoria do ingresso (exemplo, adulto, criança).
          example: 9999
        valorUnitario:
          type: number
          format: float
          description: Valor unitário do ingresso.
          example: 111.11
        qrCode:
          type: string
          description: Código QR Code do ingresso (se já gerado ou pré-definido).
          example: SFTE_0001
        emailVisitante:
          type: string
          description: E-mail do visitante do ingresso.
          example: visitante@example.com
        nomeVisitante:
          type: string
          description: Nome completo do visitante.
          example: Maria Aparecida
        docVisitante:
          type: string
          description: Documento do visitante (ex. CPF, RG).
          example: '98765432100'
        dataNascVisitante:
          type: string
          format: date
          description: Data de nascimento do visitante.
          example: '1990-01-01'
        generoVisitante:
          type: string
          description: Gênero do visitante.
          enum:
          - M
          - F
          - '-'
          - O
          example: F
        escolaridadeVisitante:
          type: string
          description: Escolaridade do visitante.
          enum:
          - NAO
          - FUND
          - MED
          - SUP
          - POS
          example: MED
        telefone:
          type: string
          description: Telefone de contato do visitante.
          example: '21999998888'
        convenioVisitante:
          type: integer
          format: int32
          description: Código do convênio (se aplicável).
          example: 0
        moradorTipoDoc:
          type: string
          description: Tipo de documento do morador (se for ingresso para morador).
          example: CPF
        municipio:
          type: string
          description: Município de residência (se aplicável).
          example: Rio de Janeiro
        CEP:
          type: string
          description: CEP de residência (se aplicável).
          example: '20000000'
        IBGE:
          type: string
          description: Código IBGE do município.
          example: '3304557'
        descricaoVenda:
          type: string
          description: Descrição interna da venda/item.
          example: Ingresso Promocional
        descontoTag:
          type: string
          description: Tag de desconto aplicada (se aplicável).
          example: PROMO10
        contribFundo:
          type: string
          description: Código de contribuição para fundo (se aplicável).
          example: FUNDO01
        tripulanteCodigo:
          type: integer
          format: int32
          description: Código do tripulante (se aplicável).
          example: 0
        codigoLote:
          type: integer
          format: int32
          description: Código do lote do ingresso.
          example: 0
        qrCodeAdicional:
          type: string
          description: QR Code adicional para outro serviço (se aplicável).
          example: ADICIONAL_001
        receitas:
          type: array
          description: Lista de receitas ou serviços agregados a este ingresso.
          items:
            $ref: '#/components/schemas/Receita'
    ReservaRequest:
      type: object
      description: Schema completo para a requisição de criação de reserva.
      required:
      - dataHora
      - totalLiquido
      - idParceiro
      - ingressos
      properties:
        dataHora:
          type: string
          format: date-time
          description: Data e hora da visita/reserva.
          example: '2025-10-01T11:00:00.000'
        totalLiquido:
          type: number
          format: float
          description: Valor total líquido da reserva.
          example: 100.5
        idParceiro:
          type: integer
          format: int32
          description: ID do parceiro responsável pela venda.
          example: 1234
        pontoVenda:
          type: string
          description: Identificação do ponto de venda.
          example: web_pdv01
        usuarioVenda:
          type: string
          description: Usuário que efetuou a venda.
          example: vendedor_joao
        meioVenda:
          type: string
          description: Canal de venda.
          enum:
          - WEB
          - APP
          - PDV
          - CALLCENTER
          example: WEB
        campanhaVenda:
          type: string
          description: Nome ou código da campanha de venda.
          example: campanha_verao
        utm_medium:
          type: string
          description: Parâmetro UTM medium da venda.
          example: cpc
        utm_source:
          type: string
          description: Parâmetro UTM source da venda.
          example: facebook
        utm_content:
          type: string
          description: Parâmetro UTM content da venda.
          example: bannerpromo
        codigoPromocional:
          type: string
          description: Código promocional utilizado.
          example: DESCONTO20
        titularNome:
          type: string
          description: Nome completo do titular da reserva.
          example: João da Silva
        titularDoc:
          type: string
          description: Documento (ex. CPF) do titular da reserva.
          example: '12345678900'
        titularEmail:
          type: string
          nullable: true
          description: E-mail do titular da reserva.
          example: joao@example.com
        titularNascimento:
          type: string
          format: date
          description: Data de nascimento do titular.
          example: '1985-05-15'
        titularFone:
          type: string
          description: Telefone de contato do titular.
          example: '21987654321'
        idOrigem:
          type: string
          description: ID da origem ou sistema que gerou a reserva.
          example: SISTEMA_A
        ingressos:
          type: array
          description: Lista de ingressos incluídos na reserva.
          items:
            $ref: '#/components/schemas/ReservaItem'
    ReservaResponse:
      type: object
      description: Schema para a resposta após a criação da reserva.
      properties:
        localizador:
          type: string
          description: Código localizador da reserva.
          example: LB123456789
        idVenda:
          type: string
          description: ID interno da venda gerada.
          example: '123456789'
    QrCodeReadResponse:
      type: object
      properties:
        qrCode:
          type: string
          example: LMBR_393365650
        bilhete:
          type: string
          example: Passe Comunidade Foz do Iguaçu
        categoria:
          type: string
          example: Adulto
        utilizacoes:
          type: array
          items:
            type: object
            properties:
              idLeitura:
                type: integer
                example: 11
              usoDataHora:
                type: string
                format: date-time
                example: '2023-12-08T09:13:11.000Z'
              usoTerminal:
                type: string
                example: TERMINAL
    UtilizacaoItem:
      type: object
      properties:
        codigo:
          type: integer
          example: 1234
        status:
          type: string
          example: X
        statusDesc:
          type: string
          example: Inutilizada (Não confirmou o Pagamento)
        itens:
          type: array
          items:
            type: object
            properties:
              sequencia:
                type: integer
                example: 1
              qrCode:
                type: string
                example: LMBR_393365650
              bilhete:
                type: string
                example: Passe Comunidade Foz do Iguaçu
              categoria:
                type: string
                example: Adulto
  responses:
    UnauthorizedExpired:
      description: expired token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: expired token
    UnauthorizedInvalid:
      description: invalid token - Ambiente errado. Troque card por testescard ou
        vice-versa
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: invalid token
    BadRequest:
      description: Campo faltando ou formato errado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Erro interno do servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
paths:
  /api/auth:
    post:
      tags:
      - Autenticação
      summary: Autenticação - gera token e retorna o(s) idParceiro(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Autenticação bem-sucedida (utilize esse token para as outras
            requisições)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/sku:
    post:
      tags:
      - Consultas
      summary: Consulta de Bilhetes disponíveis para Venda
      security:
      - bearerAuth: []
      requestBody:
        description: 0 Para trazer as informações de todos os SKUs, ou o codigo de
          um específico para retornar apenas os dados desse
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - idParceiro
              - sku
              properties:
                idParceiro:
                  type: integer
                  example: 123
                sku:
                  type: number
                  example: 0
      responses:
        '200':
          description: Lista de SKUs disponíveis (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SKUItem'
                exemplo:
                  summary: Exemplo de resposta com múltiplos SKUs
                  value:
                  - sku: 4671
                    nome: Atrativos
                    slug: atrativos
                    ativo: S
                    perfil: 556
                    qtdMaxIngressos: null
                    qtdMinIngressos: null
                    qtdMaxIngressosTurismo: null
                    qtdMinIngressosTurismo: null
                    qtdMaxIngTotalCarrinho: null
                    qtdMinIngTotalCarrinho: null
                    configPagamento: null
                    metodosPag:
                    - CARTAO
                    - A FATURAR
                    - PIX
                    - DINHEIRO
                    permiteInfoVisitanteDepois: null
                    diasLimiteParaVisitantes: null
                    descricao: Desfrute de um evento emocionante com nosso ingresso
                      exclusivo...
                    textoImpressao: null
                    textoImpressaoHorario: null
                    estabelecCad: null
                    prefixoQrcode: API
                    controlaHorarios: S
                    controleDisp: null
                    controlaIdiomaHorarios: null
                    habilitaValorZerado: null
                    cobrancaFundo: null
                    cobrancaFundoComecaMarcado: null
                    nomeFundo: null
                    consultaPrecosSazonais: null
                    vendaSemDataVisita: null
                    multiplasDatasVisita: null
                    isentarUltimoDiaReserva: null
                    maxDiasVisita: null
                    minDiasVisita: null
                    mostraLabelAPartirDe: null
                    mostraHorarioFinal: null
                    mostraVagasDisp: null
                    mostraHorEsgotados: null
                    nomeTermoDeAceite: null
                    pathTermoDeAceite: null
                    habilitaBilheteVinculado: null
                    unicoNoCarrinho: null
                    linkExterno: null
                    textoEmbarque: null
                    textoEmbarqueVoucher: null
                    textoDataVis: null
                    textoDataVisVoucher: null
                    textoHoraVis: null
                    textoHoraVisVoucher: null
                    textoPoltrona: null
                    textoVagao: null
                    textoSessaoImp: null
                    textoSessaoEc: null
                    textoEscolhaCategorias: null
                    duracao: null
                    bloquearPorDuracao: N
                    idiomas: []
                    consultarDispOffline: N
                    dataLimiteConsultarDisp: null
                    tempoAntecedencia: 0
                    escalaAutomaticaAssentos: null
                    habilitaVendaDiasCorridos: N
                    consultarPrecosCard: S
                    consultarDispCard: S
                    permiteLeiturasMesmoDia: N
                    qtdDiasCorridos: null
                    limiteLeiturasDiasCorridos: null
                    dataAlertaInit: null
                    dataAlertaFim: null
                    alertaInic: null
                    alertaInicCor: null
                    alertaInicDesc: null
                    desativaVendasBi: N
                    utilizaMapaSessoes: null
                    dataHoraVendaIniUTC: null
                    formatedDataHoraVendaIni: null
                    dataHoraVendaFimUTC: null
                    formatedDataHoraVendaFim: null
                    mostraPrecoCalendario: S
                    limiteDiasParaRemarcacao: null
                    imprimeCanhoto: null
                    imprimeValorBilhete: null
                    mostraNomeHome: null
                    habilitaPaisEstado: null
                    habilitaCEP: null
                    coletaDadosVisitantes: []
                    coletaDadosVisitantesMoradorLocal: []
                    coletaApanhe: 0
                    coletaObservacao: 0
                    menorIdadeNecessitaAceiteResponsavel: null
                    solicitaContatoEmergencia: null
                    solicitaContatoEmergenciaTick: null
                    _gerarQrCodeCripto: false
                    _gerarQrCode: true
                    _utilizaQrCode: true
                    _chaveQrCode: null
                    _grupoLotes: null
                    _preVendaGrupo: null
                    _preVendaDataIni: null
                    _preVendaDataFim: null
                    _preVendaHoraIni: null
                    _preVendaHoraFim: null
                    categorias:
                    - idCategoria: 3831
                      nomeCategoria: API - Adulto 2222
                      validaIdade: null
                      idadeInicial: null
                      idadeFinal: null
                      privativo: null
                      aPartirDe: null
                      descricaoCategoria: null
                      valorUnitario: 15
                      ordem: null
                      ocupaAssento: null
                      moradorLocal: false
                      paises: []
                      convenios: []
                      coletaFoto: null
                      receitas:
                      - idReceita: 3419
                        nomeReceita: Limber - API - Atrativos
                        estabelec: null
                        nomeEstabelec: null
                        valor: 15
                        valorContribFundo: null
                        evento: null
                        dataEvento: null
                        dataIniCalendario: null
                        ordemReceita: null
                    - idCategoria: 3832
                      nomeCategoria: API - Meia Entrada 222
                      validaIdade: null
                      idadeInicial: null
                      idadeFinal: null
                      privativo: null
                      aPartirDe: null
                      descricaoCategoria: null
                      valorUnitario: 7
                      ordem: null
                      ocupaAssento: null
                      moradorLocal: false
                      paises: []
                      convenios: []
                      coletaFoto: null
                      receitas:
                      - idReceita: 3419
                        nomeReceita: Limber - API - Atrativos
                        estabelec: null
                        nomeEstabelec: null
                        valor: 7
                        valorContribFundo: null
                        evento: null
                        dataEvento: null
                        dataIniCalendario: null
                        ordemReceita: null
                    imagens:
                    - urlImg: https://cdntestes.limbersoftware.com.br/img/bilhetes/4671/8xwN6VlWCP.webp
                      resolucao: null
                      mostrarGaleria: true
                      mostrarHome: true
                      linkVideo: null
                      vibrantColor: '#7f7f7f'
                    locaisEmbarque: []
                    sessoes: []
                    paises: []
                    blocosDeTexto: []
                    temporadas:
                    - temporada: 1
                      tipoReceita: null
                      tipo_receita: null
                      nome: Disponível
                      preco: null
                      corCalendario: '#37ff00'
                      cor_calendario: '#37ff00'
                    bilhetesVinculados: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/disponibilidade/calendario:
    post:
      tags:
      - Consultas
      summary: Consulta Disponibilidade (Calendário)
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - datainicial
              - datafinal
              - sku
              - idparceiro
              - receita
              properties:
                datainicial:
                  type: string
                  format: date
                  example: AAAA-MM-DD
                  description: Data de visita inicial da consulta
                datafinal:
                  type: string
                  format: date
                  exampe: AAAA-MM-DD
                  description: Data de visita final da consulta
                sku:
                  type: integer
                  exampe: 1234
                meiovenda:
                  example: WEB
                  type: string
                idparceiro:
                  type: integer
                  example: 123
                receita: 
                  type: integer
                  example: 1234
                temporada: 
                  type: integer
                  example: 0
                localembarque: 
                  type: integer
                  example: 0
                quantidade: 
                  type: integer
                  example: 0

      responses:
        '200':
          description: Datas com disponibilidade (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisponibilidadeCalendarioItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/disponibilidade/calendario/geral:
    post:
      tags:
      - Consultas
      summary: Consulta Disponibilidade Calendário Geral (por mês)
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - mes
              - idParceiro
              - codigoec
              - divisao
              properties:
                mes:
                  type: string
                  example: MM/AAAA
                idParceiro:
                  type: integer
                  example: 123
                codigoec:
                  type: number
                  example: 123
                divisao:
                  type: number
                  example: 123
                datafim:
                  type: date
                  example: AAAA-MM-DD
                dataini:
                  type: date
                  example: AAAA-MM-DDD
            example:
              mes: MM/AAAA
              idparceiro: 123
              codigoec: 123
              divisao: 123
              datafim: AAAA-MM-DD
              dataini: AAAA-MM-DD
      responses:
        '200':
          description: Disponibilidade por dia do mês (formato específico por cliente)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date-time
                    altaProcura:
                      type: boolean
                    temporada:
                      type: integer
                    disponivel:
                      type: boolean
                    legenda:
                      type: object
                      properties:
                        texto:
                          type: string
                        cor:
                          type: string
                    bilhetes:
                      type: array
                      items:
                        type: object
                        properties:
                          sku:
                            type: integer
                          nome:
                            type: string
                          esgotado:
                            type: boolean
                    preco:
                      type: number
                      nullable: true
                  additionalProperties: true
              example:
                - date: "AAAA-MM-DDTHH:MM:SS.000Z"
                  altaProcura: false
                  temporada: 10001
                  disponivel: true
                  legenda:
                    texto: "Disponivel"
                    cor: "#37ff00"
                  bilhetes:
                    - sku: 1234
                      nome: "Atrativos"
                      esgotado: false
                    - sku: 4231
                      nome: "Acesso ao Parque - Completo"
                      esgotado: false
                    - sku: 321
                      nome: "Acesso ao Parque - Simples"
                      esgotado: false
                  preco: null
                - date: "AAAA-MM-DDTHH:MM:DD.000Z"
                  altaProcura: false
                  temporada: 10001
                  disponivel: true
                  legenda:
                    texto: "Disponivel"
                    cor: "#37ff00"
                  bilhetes:
                    - sku: 1234
                      nome: "Atrativos"
                      esgotado: false
                    - sku: 4321
                      nome: "Acesso ao Parque - Completo"
                      esgotado: false
                    - sku: 321
                      nome: "Acesso ao Parque - Simples"
                      esgotado: false
                  preco: null
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/disponibilidade/estoque:
    post:
      tags:
      - Consultas
      summary: Consulta Disponibilidade (Estoque de um SKU)
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              - sku
              - idParceiro
              - meioVenda
              - reseceita
              properties:
                data:
                  type: string
                  format: date
                  example: AAAA-MM-DD
                dataFim:
                  type: string
                  format: date
                  example: AAAA-MM-DD
                sku:
                  type: integer
                  example: 1234
                idParceiro:
                  type: integer
                  example: 123
                meioVenda:
                  type: string
                  example: WEB
                receita:
                  type: integer
                  example: 4321
                sessao:
                  type: integer
                  example: 1
                quantidade: 
                  type: integer
                  example: 0
                localembarque:
                  type: integer
                  example: 1
            example:
              data: AAAA-MM-DD
              sku: 1234
              idParceiro: 123
              meioVenda: WEB
              receita: 1234
              sessao: 123
              quantidade: 0
              localEmbarque: 1
      responses:
        '200':
          description: Horários com disponibilidade detalhada por dia
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: string
                      format: date-time
                      description: Data da disponibilidade
                      example: "AAAA-MM-DDTHH:00:00.000Z"
                    configDisp:
                      type: array
                      description: Lista de configurações de disponibilidade para o dia
                      items:
                        type: object
                        properties:
                          disponivel:
                            type: integer
                            description: Número de vagas disponíveis
                            example: 1994
                          vagasTotais:
                            type: integer
                            description: Número total de vagas
                            example: 2000
                          horaembarqueinicial:
                            type: string
                            format: time
                            description: Hora inicial de embarque
                            example: "06:00:00"
                          horaembarquefinal:
                            type: string
                            format: time
                            description: Hora final de embarque
                            example: "23:59:00"
                          descricao:
                            type: string
                            description: Intervalo de horários ou descrição da vaga
                            example: "10:00 as 17:00"
                          temporada:
                            type: integer
                            description: Código da temporada
                            example: 1
                          escolheidiomas:
                            type: string
                            nullable: true
                            description: Idiomas escolhidos pelo cliente (se aplicável)
                            example: null
                          idiomas:
                            type: string
                            nullable: true
                            description: Idiomas disponíveis
                            example: null
                          progseq:
                            type: integer
                            description: Sequência do programa
                            example: 1
                          proghorario:
                            type: integer
                            description: Código do horário do programa
                            example: 4671
                          somenteprivativo:
                            type: string
                            description: Indica se é somente privativo (S/N)
                            example: "N"
                          permiteprivativo:
                            type: string
                            description: Indica se permite privativo (S/N)
                            example: "N"
                          preenchevagas:
                            type: string
                            description: Indica se preenche vagas automaticamente (S/N)
                            example: "N"
                          sessoesMapa:
                            type: string
                            nullable: true
                            description: Caminho ou informações do mapa das sessões
                            example: null
                          pathSvgComBucket:
                            type: string
                            nullable: true
                            description: Caminho do SVG no bucket
                            example: null
                          categorias:
                            type: array
                            description: Lista de categorias de vagas
                            items:
                              type: object
                              properties:
                                disponivel:
                                  type: integer
                                  description: Número de vagas disponíveis na categoria
                                  example: 994
                                vagasTotais:
                                  type: integer
                                  description: Número total de vagas na categoria
                                  example: 1000
                                idCategoria:
                                  type: integer
                                  description: Identificador da categoria
                                  example: 3831
                          sessoes:
                            type: array
                            description: Lista de sessões detalhadas (se houver)
                            items:
                              type: object
                       
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/disponibilidade/estoqueagrupado:
    post:
      tags:
      - Consultas
      summary: Consulta Disponibilidade Agrupada (Estoque de um SKU)
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: date
                dataFim:
                  type: string
                  format: date
                sku:
                  type: integer
                idParceiro:
                  type: integer
                meiovenda:
                  type: string
                quantidade:
                  type: integer
                localEmbarque:
                  type: integer
                sessao:
                  type: integer
            example:
              data: AAAA-MM-DD
              sku: 1234
              idParceiro: 0
              meiovenda: WEB
      responses:
        '200':
          description: Horários agrupados (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    progseq:
                      type: integer
                      example: 1
                    proghorario:
                      type: integer
                      example: 1
                    disponivel:
                      type: integer
                      example: 12
                    temporada:
                      type: integer
                      example: 1
                    horaembarqueinicial:
                      type: string
                      example: '10:00:00'
                    horaembarquefinal:
                      type: string
                      example: '11:00:00'
                    idiomas:
                      type: string
                      example: Português,Inglês
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/configpreco:
    post:
      tags:
        - Consultas
      summary: Consulta de preço SKU (configuração de preço)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: date
                  example: 'AAAA-MM-DD'
                  description: Data inicial da consulta
                dataFim:
                  type: string
                  format: date
                  example: 'AAAA-MM-DD'
                  description: Data final da consulta
                sku:
                  type: integer
                  example: 1234
                  description: Código do SKU
                receita:
                  type: integer
                  example: 4321
                  description: Código da receita selecionada
                idparceiro:
                  type: integer
                  example: 123
                  description: ID do parceiro
                localembarque: 
                  type: integer
                  example: 2
                  description: Local embarque do SKU
                essao:
                  type: integer
                  example: 1
                  description: Local embarque do SKU
              required:
                - data
                - dataFim
                - sku
                - receita
                - idparceiro
      responses:
        '200':
          description: Preço e categorias do SKU
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: string
                      format: date-time
                      example: '2025-10-25T03:00:00.000Z'
                    configPreco:
                      type: object
                      properties:
                        habilitaDescontoPorCategoria:
                          type: boolean
                        id:
                          type: integer
                        descontoProgressivo:
                          type: array
                          items: {}
                        categorias:
                          type: array
                          items:
                            type: object
                            properties:
                              idCategoria:
                                type: integer
                              nomeCategoria:
                                type: string
                              aPartirDe:
                                type: boolean
                              descricaoCategoria:
                                type: string
                                nullable: true
                              valorUnitario:
                                type: number
                              receitas:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    idReceita:
                                      type: integer
                                    nomeReceita:
                                      type: string
                                    idReceitaBilheteBuscaPreco:
                                      type: string
                                      nullable: true
                                    valor:
                                      type: number
                                    taxaConveniencia:
                                      type: number
                                      nullable: true
                                    valorContribFundo:
                                      type: number
                              lote:
                                type: object
                                properties:
                                  lote:
                                    type: string
                                  codigo:
                                    type: integer
                                  data_visita:
                                    type: string
                                    format: date-time
                                  vagas_atuais:
                                    type: integer
                        valorAPartirDe:
                          type: number
                          nullable: true
              example:
                - data: "AAAA-MM-DDTHH:MM:SS.000Z"
                  configPreco:
                    habilitaDescontoPorCategoria: false
                    id: 1
                    descontoProgressivo: []
                    categorias:
                      - idCategoria: 1234
                        nomeCategoria: "Nome Categoria"
                        aPartirDe: false
                        descricaoCategoria: null
                        valorUnitario: 100
                        receitas:
                          - idReceita: 4321
                            nomeReceita: "Nome Receita"
                            idReceitaBilheteBuscaPreco: null
                            valor: 100
                            taxaConveniencia: null
                            valorContribFundo: 0
                        lote:
                          lote: "EXEMPLO"
                          codigo: 12345
                          data_visita: "AAAA-MM-DDTHH:MM:SS.000Z"
                          vagas_atuais: 1000
                      - idCategoria: 1234
                        nomeCategoria: "Nome Categoria"
                        aPartirDe: false
                        descricaoCategoria: "Descrição categoria"
                        valorUnitario: 1
                        receitas:
                          - idReceita: 4321
                            nomeReceita: "Nome receita 2"
                            idReceitaBilheteBuscaPreco: null
                            valor: 1
                            taxaConveniencia: null
                            valorContribFundo: 0
                        lote:
                          lote: "EXEMPLO"
                          codigo: 54321
                          data_visita: "AAAA-MM-DDTHH:MM:SS.000Z"
                          vagas_atuais: 1000
                    valorAPartirDe: null
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/integra/venda:
    post:
      tags:
      - Reserva/Venda
      summary: Reserva / Integra Venda (gera localizador)
      security:
      - bearerAuth: []
      description: "Faz uma reserva de ingressos (gera localizador). Normalmente válida\
        \ por ~15 Minutos.\n\n### Código dos campos de coletas de dados:\n- 1: nomeVisitante\
        \ \n- 2: nomeVisitante **obrigatorio**\n- 3: docVisitante\n- 4: docVisitante\
        \ **obrigatorio**\n- 5: dataNascVisitante\n- 6: dataNascVisitantento **obrigatorio**\n\
        - 7: fotoVisitante\n- 8: fotoVisitante **obrigatorio**\n- 9: telefone\n- 10:\
        \ telefone **obrigatorio**\n- 12: enderecoVisitante **obrigatorio**\n- 13:\
        \ generoVisitante\n- 14: generoVisitante **obrigatorio**\n- 15: escolaridadeVisitante\n\
        - 16: escolaridadeVisitante **obrigatorio**\n"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservaRequest'
            example:
              dataHora: AAAA-MM-DDTHH:MM:SS.000
              totalLiquido: 123.5
              idParceiro: 1234
              pontoVenda: exemplo
              usuarioVenda: vendedor nome
              meioVenda: WEB
              campanhaVenda: campanha nome
              utm_medium: cpc
              utm_source: facebook
              utm_content: bannerpromo
              codigoPromocional: DESCONTO20
              titularNome: Nome Sobrenome
              titularDoc: '12345678900'
              titularEmail: mail@example.com
              titularNascimento: AAAA-MM-DD
              titularFone: '21987654321'
              idOrigem: SISTEMA_A
              ingressos:
              - seq: 1
                idPais: 1
                uf: RJ
                sku: 1234
                idCategoria: 9999
                valorUnitario: 123.11
                qrCode: null
                emailVisitante: visitante@example.com
                nomeVisitante: Nome Sobrenome
                docVisitante: '98765432100'
                dataNascVisitante: AAAA-MM-DD
                generoVisitante: F
                escolaridadeVisitante: MED
                telefone: '21999998888'
                convenioVisitante: 0
                moradorTipoDoc: CPF
                municipio: Rio de Janeiro
                CEP: '20000000'
                IBGE: '3304557'
                descricaoVenda: Ingresso Promocional
                descontoTag: PROMO10
                contribFundo: FUNDO01
                tripulanteCodigo: 0
                codigoLote: 0
                qrCodeAdicional: ADICIONAL_001
                receitas:
                - idReceita: 101
                  valor: 50.0
                  dataVisita: AAAA-MM-DD
                  localEmbarque: 1
                  temporada: 5
                  horarioStr: 00:01 - 14:00
                  progHorario: 1
                  progSeq: 1
                  idiomaEscolhido: PT
                  sessao: 1
                  poltrona: 15
                  placa: ABC1234
      responses:
        '200':
          description: Reserva criada (retorna localizador e ingressos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservaResponse'
                sucesso:
                  value:
                    localizador: LMBR-20251001-ABC123
                    validade: '2025-10-01T12:00:00.000'
                    totalLiquido: 100.5
                    ingressos:
                    - seq: 1
                      sku: 1234
                      idCategoria: 9999
                      valorUnitario: 111.11
                      qrCode: SFTE_0001

                      
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'
  /api/cross/inutilizacao: null
  post:
    tags:
    - Reserva/Venda
    summary: Inutilização / Inutiliza Venda
    security:
    - bearerAuth: []
    description: 'Inutiliza uma reserva de ingressos e seus QRcodes.

      '
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              localizador:
                type: string
              idParceiro:
                type: integer
              motivoCancelamento:
                type: string
            required:
            - localizador
            - idParceiro
            - motivoCancelamento
          example:
            localizador: <Localizador>
            idParceiro: 1234
            motivoCancelamento: Desistência da compra
    responses:
      '200':
        description: Reserva inutilizada
        content:
          application/json:
            schema:
              type: object
              properties:
                localizador:
                  type: string
                status:
                  type: string
              sucesso:
                value:
                  localizador: LB99999999
                  status: X
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/confirmacao:
    post:
      tags:
        - Reserva/Venda
      summary: Confirmação / Transforma reserva em venda
      security:
        - bearerAuth: []
      description: >
        Confirma uma reserva e registra a venda. É necessário ter um localizador válido.

        ### Código da forma de pagamento:
        - **1** - 'CARTAO'
        - **2** - 'A FATURAR'
        - **3** - 'PIX'
        - **4** - 'DINHEIRO'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                localizador:
                  type: string
                  description: Código localizador da reserva a ser confirmada.
                  example: LB03215488
                idParceiro:
                  type: integer
                  description: Identificador do parceiro responsável pela transação.
                  example: 123
                formaPag:
                  type: integer
                  description: Código da forma de pagamento utilizada.
                  example: 1
                cartaoBandeira:
                  type: string
                  description: Bandeira do cartão utilizado, se aplicável.
                  example: MASTERCARD
                cartaoNSU:
                  type: integer
                  description: Número sequencial único (NSU) da transação.
                  example: 12345678
                cartaoAutorizacao:
                  type: string
                  description: Código de autorização da transação com o cartão.
                  example: AUTH1234
                parcelas:
                  type: integer
                  description: Quantidade de parcelas do pagamento.
                  example: 3
                comprovantePagamento:
                  type: string
                  description: Código ou hash de comprovação de pagamento.
                  example: abcD1234
                dataHoraAutorizacao:
                  type: string
                  format: date-time
                  description: Data e hora da autorização do pagamento.
                  example: 2025-10-24T15:30:00.000Z
              required:
                - localizador
                - idParceiro
                - formaPag
      responses:
        '200':
          description: Reserva confirmada e transformada em venda.
          content:
            application/json:
              schema:
                type: array
                description: Lista de itens confirmados e vinculados à venda.
                items:
                  type: object
                  properties:
                    sku:
                      type: integer
                      description: Código SKU do produto confirmado.
                      example: 4671
                    seq:
                      type: integer
                      description: Número sequencial do item dentro da reserva.
                      example: 1
                    idcategoria:
                      type: integer
                      description: Identificador da categoria associada ao item.
                      example: 3831
                    qrcode:
                      type: string
                      description: Código QR gerado para identificação ou acesso ao item.
                      example: API35110399636

        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/remarcacao:
    post:
      tags:
      - Reserva/Venda
      summary: Remarcação de Reserva
      security:
      - bearerAuth: []
      description: 'Altera os dados de visita de uma reserva. Necessário que a reserva
        esteja com o status de pagamento "Aprovada".

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                localizador:
                  type: string
                idParceiro:
                  type: integer
                ingressos:
                  type: array
                  items:
                    type: object
                    properties:
                      seq:
                        type: integer
                      docVisitante:
                        type: string
                      tipodocumento:
                        type: string
                      nomeVisitante:
                        type: string
                      telefone:
                        type: string
                      datanasc:
                        type: string
                      receitas:
                        type: array
                        items:
                          type: object
                          properties:
                            seq:
                              type: integer
                            idReceita:
                              type: integer
                            dataVisita:
                              type: string
                              format: date
                            dataVisitaFinal:
                              type: string
                              format: date
                            horarioStr:
                              type: string
                            temporada:
                              type: integer
                            localEmbarque:
                              type: integer
      responses:
        '200':
          description: Reserva remarcada
          content:
            application/json:
              schema:
                type: object
                properties:
                  localizador:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'
  /api/cross/leitura/qrCode/:
    patch:
      tags:
        - Leitura/Utilização
      summary: Consultar dados do QR code
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                qrCode:
                  type: string
                  description: QR code completo
                  example: "ABC1234567891011"
              required:
                - qrCode
      responses:
        '200':
          description: Dados do ingresso e leituras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeReadResponse'
              example:
                qrCode: "ABC1234567891011"
                bilhete: "Passe Comunidade Foz do Iguaçu"
                categoria: "Adulto"
                utilizacoes:
                  - idLeitura: 11
                    usoDataHora: "2023-12-08T09:13:11.000Z"
                    usoTerminal: "TERMINAL"
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/leitura/estorno:
    patch:
      tags:
        - Leitura/Utilização
      summary: Desfaz a leitura do QR code
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receita:
                  type: integer
                  description: Receita do QR code
                  example: 1234
                infoTerminalLeitura:
                  type: string
                  description: Nome do terminal que foi lido/devolvido
                  example: "Catraca tal"
                idparceiro:
                  type: integer
                  description: Parceiro que está fazendo a integração
                  example: 123
                qrcode:
                  type: string
                  description: QR code para a leitura ser desfeita
                  example: "ABC1234567891011"
              required:
                - receita
                - infoTerminalLeitura
                - idparceiro
                - qrcode
      responses:
        '200':
          description: Lista de vendas / itens correspondentes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UtilizacaoItem'
              example:
                - codigo: 1234
                  status: X
                  statusDesc: Inutilizada (Não confirmou o Pagamento)
                  itens:
                    - sequencia: 1
                      qrCode: LMBR_393365650
                      bilhete: Passe Comunidade Foz do Iguaçu
                      categoria: Adulto
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/utilizacao:
    get:
      tags:
        - Consultas
      summary: Consulta de Vendas por utilização, leituras ou data de visita
      description: >
        Endpoint para consultar vendas e suas respectivas utilizações, filtrando por parceiro, data de visita ou horário de uso/leitura.
      security:
        - bearerAuth: []
      parameters:
        - name: idParceiro
          in: query
          required: true
          description: ID do parceiro que está realizando a consulta.
          schema:
            type: integer
            example: 123
        - name: dataHoraUso
          in: query
          required: false
          description: Data e hora da utilização no formato ISO (AAAA-MM-DDTHH:MM:SS.000Z).
          schema:
            type: string
            format: date-time
            example: "2025-10-24T15:42:38.188Z"
        - name: dataVisita
          in: query
          required: false
          description: Data da visita (AAAA-MM-DD).
          schema:
            type: string
            format: date
            example: "2025-10-24"
        - name: dataHoraLeitura
          in: query
          required: false
          description: Data e hora da leitura do QR Code (AAAA-MM-DDTHH:MM:SS.000Z).
          schema:
            type: string
            format: date-time
            example: "2025-10-24T15:42:38.188Z"

      responses:
        '200':
          description: Lista de vendas e itens correspondentes à pesquisa.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    codigo:
                      type: integer
                      description: Código da venda.
                      example: 48916574
                    status:
                      type: string
                      description: Código do status da venda.
                      example: "A"
                    statusDesc:
                      type: string
                      description: Descrição do status da venda.
                      example: "Aprovada"
                    idOrigem:
                      type: integer
                      nullable: true
                      description: Identificador da origem, caso exista.
                      example: null
                    itens:
                      type: array
                      description: Lista de itens vinculados à venda.
                      items:
                        type: object
                        properties:
                          sequencia:
                            type: integer
                            description: Sequência do item na venda.
                            example: 1
                          qrCode:
                            type: string
                            description: Código QR gerado para o item.
                            example: "API35110399636"
                          bilhete:
                            type: string
                            description: Tipo de bilhete.
                            example: "Atrativos"
                          categoria:
                            type: string
                            description: Categoria do ingresso.
                            example: "API - Adulto 2222"
                          receitas:
                            type: array
                            description: Receitas vinculadas ao item.
                            items:
                              type: object
                              properties:
                                idReceita:
                                  type: integer
                                  description: Identificador da receita.
                                  example: 3419
                                nomeReceita:
                                  type: string
                                  description: Nome da receita.
                                  example: "Limber - API - Atrativos"
                                preco:
                                  type: number
                                  format: float
                                  description: Preço da receita.
                                  example: 59.5
                                dataVisita:
                                  type: string
                                  format: date-time
                                  description: Data da visita.
                                  example: "2025-10-24T00:00:00.000Z"
                                dataVisitaFinal:
                                  type: string
                                  format: date-time
                                  nullable: true
                                  description: Data final da visita, se houver.
                                  example: null
                                horarioStr:
                                  type: string
                                  description: Faixa de horário permitida para utilização.
                                  example: "08:00-18:00"
                                temporada:
                                  type: integer
                                  description: Código da temporada.
                                  example: 46710001
                                localDeEmbarque:
                                  type: string
                                  nullable: true
                                  description: Local de embarque, se aplicável.
                                  example: null
                                usoDataHora:
                                  type: string
                                  format: date-time
                                  nullable: true
                                  description: Data e hora em que a utilização ocorreu.
                                  example: "2025-10-24T15:42:38.188Z"
                                usoTerminal:
                                  type: string
                                  nullable: true
                                  description: Nome do terminal utilizado.
                                  example: "CARD"
                                utilizacoes:
                                  type: array
                                  description: Lista de utilizações realizadas para a receita.
                                  items:
                                    type: object
                                    properties:
                                      idLeitura:
                                        type: integer
                                        description: Identificador da leitura.
                                        example: 1
                                      usoDataHora:
                                        type: string
                                        format: date-time
                                        description: Data e hora da leitura.
                                        example: "2025-10-24T15:42:38.188Z"
                                      usoTerminal:
                                        type: string
                                        description: Nome do terminal que realizou a leitura.
                                        example: "CARD"
              example:
                - codigo: 48916574
                  status: "A"
                  statusDesc: "Aprovada"
                  idOrigem: null
                  itens:
                    - sequencia: 1
                      qrCode: "API35110399636"
                      bilhete: "Atrativos"
                      categoria: "API - Adulto 2222"
                      receitas:
                        - idReceita: 3419
                          nomeReceita: "Limber - API - Atrativos"
                          preco: 59.5
                          dataVisita: "2025-10-24T00:00:00.000Z"
                          dataVisitaFinal: null
                          horarioStr: "08:00-18:00"
                          temporada: 46710001
                          localDeEmbarque: null
                          usoDataHora: "2025-10-24T15:42:38.188Z"
                          usoTerminal: "CARD"
                          utilizacoes:
                            - idLeitura: 1
                              usoDataHora: "2025-10-24T15:42:38.188Z"
                              usoTerminal: "CARD"
                    - sequencia: 2
                      qrCode: "API95690329820"
                      bilhete: "Atrativos"
                      categoria: "API - Adulto 2222"
                      receitas:
                        - idReceita: 3419
                          nomeReceita: "Limber - API - Atrativos"
                          preco: 59.5
                          dataVisita: "2025-10-24T00:00:00.000Z"
                          dataVisitaFinal: null
                          horarioStr: "08:00-18:00"
                          temporada: 46710001
                          localDeEmbarque: null
                          usoDataHora: null
                          usoTerminal: null
                          utilizacoes: []

        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/pedidoCancelamento/{{idVenda}}:
    post:
      tags:
      - Cancelamento
      summary: Pedido de Cancelamento
      security:
      - bearerAuth: []
      description: ' ## A venda prescisa estar com o status de ao menos 1 intem como aprovado
        ETAPA 1: Faz o pedido de cancelamento de um ou mais itens dentro
        da mesma venda.

        Pode ser utilizado mais de uma vez apenas com ingressos que estão aprovados.

        Não pode ser feito com itens lidos (qrCodes).


        *Cada pedido de cancelamento gera uma Sequência (seq) com os itens da venda
        dentro.

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  example: Solicitado pelo cliente
                itens:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
                gera_credito:
                  type: string
                  example: false
                pagamentos:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
      responses:
        '200':
          description: Pedido de cancelamento realizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  venda:
                    type: number
                    example: 48831772
                  itensAtualizados:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: number
                          example: 1
                        cancelamentos_codigo:
                          type: array
                          items:
                            type: number
                            example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'
  /api/pagamentos/cancelamento/manual:
    post:
      tags:
      - Cancelamento
      summary: Cancelamento Manual
      security:
      - bearerAuth: []
      description: '## PRECISA PASSAR PELA ETAPA 1


        ETAPA: 2.1

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  example: Solicitado pelo cliente
                itens:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
                gera_credito:
                  type: string
                  example: false
                pagamentos:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
      responses:
        '200':
          description: Pedido de cancelamento realizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  venda:
                    type: number
                    example: 48831772
                  itensAtualizados:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: number
                          example: 1
                        cancelamentos_codigo:
                          type: array
                          items:
                            type: number
                            example: 1
  /api/pagamentos/cancelamento/cancelarAdquirente:
    post:
      tags:
      - Cancelamento
      summary: Cancelar uma reserva pelo adquirente
      security:
      - bearerAuth: []
      description: '## PRECISA PASSAR PELA ETAPA 1


        ETAPA: 2.2

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  example: Solicitado pelo cliente
                itens:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
                gera_credito:
                  type: string
                  example: false
                pagamentos:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
      responses:
        '200':
          description: Pedido de cancelamento realizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  venda:
                    type: number
                    example: 48831772
                  itensAtualizados:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: number
                          example: 1
                        cancelamentos_codigo:
                          type: array
                          items:
                            type: number
                            example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'
  /api/pagamentos/cancelamento/confirmaDevolucaoAdquirente:
    patch:
      tags:
      - Cancelamento
      summary: Verificar cancelamento com adquirente
      security:
      - bearerAuth: []
      description: '## PRECISA PASSAR PELA ETAPA 2.2


        ETAPA: 3

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  example: Solicitado pelo cliente
                itens:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
                gera_credito:
                  type: string
                  example: false
                pagamentos:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
      responses:
        '200':
          description: Pedido de cancelamento realizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  venda:
                    type: number
                    example: 48831772
                  itensAtualizados:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: number
                          example: 1
                        cancelamentos_codigo:
                          type: array
                          items:
                            type: number
                            example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'
externalDocs:
  description: Informações de erros e uso
  url: https://testescard.limbersoftware.com.br
