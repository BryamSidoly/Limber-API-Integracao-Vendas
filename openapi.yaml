openapi: 3.0.1 
info:
  title: Limber Cross API - Integração de Vendas (Pública)
  version: "2.0"
  description: |
    Esta API permite a integração de vendas com a plataforma Limber via API.

    ## Informações Gerais
    - Esta documentação esta referenciada para testes. Para produção troque "testescard" por "card"
    - Todos os endpoints (exceto autenticação) exigem um token JWT válido no cabeçalho `Authorization: Bearer {token}`.

    ## Fluxo:
    - **1** – Autenticação
    - **2** – Consulta SKU pelo idParceiro do Auth
    - **3** – Consulta de calendario (Geral ou do Ingresso)
    - **4** – Consulta de estoque do SKU (Estoque ou Estoque agrupado)
    - **5** – Consulta de preço do SKU
    - **6** – Reserva
    - **7** – Confirmação (Pagamento/Inutlização):
      - **7.1** – Inutilização
      - **7.2** – Confirmação:
        - **7.2.1** – Pagamento manual
        - **7.2.2** – Pagamento na adquirente
        - **7.2.3** – Gerar link de pagameto
    - **8** – Pedido de cancelamento
    - **8** – Cancelamento:
      - **8.1** – Cancelamento manual
      - **8.2** – Cancelamentona adquirente
      - **8.2.1** – Verificar cancelamento na adquirente

servers: 
- url: https://testescard.limbersoftware.com.br
  description: Ambiente de testes (padrão)

tags:
  - name: Autenticação
    description: Endpoints para login e obtenção de token
  - name: Consultas
    description: Rotas para consulta de SKUs, disponibilidade e preços
  - name: Reserva/Venda
    description: Criação de reservas / integração de vendas
  - name: Leitura/Utilização
    description: QRCode e consultas de utilização

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Campo idParceiro 123 não existe para o usuário atual"

    AuthRequest:
      type: object
      required:
        - usuario
        - senha
      properties:
        usuario:
          type: string
          example: "Limber"
        senha:
          type: string
          example: "Software"

    AuthResponse:
      type: object
      properties:
        codigo:
          type: integer
          example: 559
        nivel:
          type: integer
          example: 30
        nome:
          type: string
          example: "API - TESTES - RESERVAS"
        usuario:
          type: string
          example: "apireservas"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        email:
          type: string
          example: "apireservas"
        parceiros:
          type: array
          items:
            type: object
            properties:
              idparceiro:
                type: integer
                example: 2402
              nomeparceiro:
                type: string
                example: "Ecommerce - API - Limber"
              tipoparceiro:
                type: string
                example: "EC"
              pedido_de_cancelamento:
                type: boolean
                example: false
              visualiza_relatorios_venda:
                type: integer
                example: 0
              altera_cadastro:
                type: boolean
                example: false
              sac:
                type: boolean
                example: false
              integra_venda:
                type: boolean
                example: false
              desct_central_vendas:
                type: [string, "null"]
                example: null
              administrador:
                type: boolean
                example: false
              remarcacao:
                type: boolean
                example: true
              cancelamento_de_venda:
                type: boolean
                example: false

    SKUCategory:
      type: object
      properties:
        idCategoria:
          type: integer
        nomeCategoria:
          type: string
        descricaoCategoria:
          type: string
          nullable: true
        valorUnitario:
          type: number
        receitas:
          type: array
          items:
            type: object
            properties:
              idReceita:
                type: integer
              nomeReceita:
                type: string
              valor:
                type: number
              valorContribFundo:
                type: number
                nullable: true

    SKUItem:
      type: object
      properties:
        sku:
          type: integer
        nome:
          type: string
        slug:
          type: string
        ativo:
          type: string
        descricao:
          type: string
          nullable: true
        prefixoQrcode:
          type: string
          nullable: true
        controlaHorarios:
          type: string
        categorias:
          type: array
          items:
            $ref: '#/components/schemas/SKUCategory'
        imagens:
          type: array
          items:
            type: object
            properties:
              urlImg:
                type: string
              mostrarGaleria:
                type: boolean
              mostrarHome:
                type: boolean
              vibrantColor:
                type: string
        locaisEmbarque:
          type: array
          items:
            type: object
            properties:
              localEmbarque:
                type: integer
              nomeLocalEmbarque:
                type: string
              descricao:
                type: string
        temporadas:
          type: array
          items:
            type: object
            properties:
              temporada:
                type: integer
              nome:
                type: string
              corCalendario:
                type: string

    DisponibilidadeCalendarioItem:
      type: object
      properties:
        data:
          type: string
          format: date-time
          example: "AAAA-MM-DDTHH:MM:SS.000Z"
        temporada:
          type: integer
          example: 1
        disponivel:
          type: integer
          example: 7
        locaisEmbarque:
          type: array
          items:
            type: object
            properties:
              codigo:
                type: integer
                example: 1
              disponivel:
                type: integer
                example: 3
        corTemporada:
          type: string
          example: "#37ff00"
        nomeTemporada:
          type: string
          example: "Disponivel"
        altaProcura:
          type: string
          nullable: true

    DisponibilidadeEstoqueItem:
      type: object
      properties:
        temporada:
          type: integer
          example: 2
        prog_horario:
          type: integer
          example: 55
        prog_seq:
          type: integer
          example: 68
        horaembarqueinicial:
          type: string
          format: date-time
          example: "1970-01-01T11:20:00.000Z"
        horaembarquefinal:
          type: string
          format: date-time
          example: "1970-01-01T11:25:00.000Z"
        disponivel:
          type: integer
          example: 36
        descricao:
          type: string
          example: "<descrição da vaga>"
        idiomas:
          type: string
          example: "Português,Inglês"

    ReservaItem:
      type: object
      properties:
        seq:
          type: integer
          example: 1
        sku:
          type: integer
          example: 123456
        idCategoria:
          type: integer
          example: 9999
        valorUnitario:
          type: number
          example: 111.11
        qrCode:
          type: string
          example: "SFTE_0001"

    ReservaRequest:
      type: object
      required:
        - dataHora
        - totalLiquido
        - idParceiro
        - titularNome
        - titularDoc
      properties:
        dataHora:
          type: string
          format: date-time
          example: "2025-10-01T11:00:00.000"
        totalLiquido:
          type: number
          example: 100.5
        idParceiro:
          type: integer
          example: 1234
        titularNome:
          type: string
          example: "João da Silva"
        titularDoc:
          type: string
          example: "12345678900"
        titularEmail:
          type: string
          nullable: true
          example: "joao@example.com"
        ingressos:
          type: array
          items:
            $ref: '#/components/schemas/ReservaItem'

    ReservaResponse:
      type: object
      properties:
        localizador:
          type: string
          example: "LMBR-20251001-ABC123"
        validade:
          type: string
          format: date-time
          example: "2025-10-01T12:00:00.000"
        totalLiquido:
          type: number
          example: 100.5
        ingressos:
          type: array
          items:
            $ref: '#/components/schemas/ReservaItem'

    QrCodeReadResponse:
      type: object
      properties:
        qrCode:
          type: string
          example: "LMBR_393365650"
        bilhete:
          type: string
          example: "Passe Comunidade Foz do Iguaçu"
        categoria:
          type: string
          example: "Adulto"
        utilizacoes:
          type: array
          items:
            type: object
            properties:
              idLeitura:
                type: integer
                example: 11
              usoDataHora:
                type: string
                format: date-time
                example: "2023-12-08T09:13:11.000Z"
              usoTerminal:
                type: string
                example: "TERMINAL"

    UtilizacaoItem:
      type: object
      properties:
        codigo:
          type: integer
          example: 1234
        status:
          type: string
          example: "X"
        statusDesc:
          type: string
          example: "Inutilizada (Não confirmou o Pagamento)"
        itens:
          type: array
          items:
            type: object
            properties:
              sequencia:
                type: integer
                example: 1
              qrCode:
                type: string
                example: "LMBR_393365650"
              bilhete:
                type: string
                example: "Passe Comunidade Foz do Iguaçu"
              categoria:
                type: string
                example: "Adulto"

  responses:
    UnauthorizedExpired:
      description: expired token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "expired token"
    UnauthorizedInvalid:
      description: invalid token - Ambiente errado. Troque card por testescard ou vice-versa
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "invalid token"
    BadRequest:
      description: Campo faltando ou formato errado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Erro interno do servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

paths:

  /api/auth:
    post:
      tags:
        - Autenticação
      summary: Autenticação (gera token e idParceiro)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            example:
              usuario: "Limber"
              senha: "Software"
      responses:
        '200':
          description: Autenticação bem-sucedida (retorna token e parceiros)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              examples:
                sucesso:
                  value:
                    codigo: 559
                    nivel: 30
                    nome: "API - TESTES - RESERVAS"
                    usuario: "apireservas"
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    email: "apireservas"
                    parceiros:
                      - idparceiro: 123
                        nomeparceiro: "API - Nome parceiro"
                        tipoparceiro: "IA"
                        pedido_de_cancelamento: true
                        visualiza_relatorios_venda: 2
                        altera_cadastro: true
                        sac: false
                        integra_venda: true
                        desct_central_vendas: null
                        administrador: true
                        remarcacao: true
                        cancelamento_de_venda: true
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/consulta/sku:
    post:
      tags:
        - Consultas
      summary: Consulta de Bilhetes disponíveis para Venda
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idParceiro
                - sku
              properties:
                idParceiro:
                  type: integer
                  example: 123
                sku:
                  type: string
                  example: "0"
      responses:
        '200':
          description: Lista de SKUs disponíveis (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SKUItem'
              examples:
                exemplo:
                  summary: Exemplo de resposta com múltiplos SKUs
                  value:
                    - sku: 4671
                      nome: "Atrativos"
                      slug: "atrativos"
                      ativo: "S"
                      perfil: 556
                      metodosPag:
                        - CARTAO
                        - A FATURAR
                        - PIX
                        - DINHEIRO
                      descricao: "Desfrute de um evento emocionante com nosso ingresso exclusivo..."
                      prefixoQrcode: "API"
                      controlaHorarios: "S"
                      categorias:
                        - idCategoria: 3831
                          nomeCategoria: "API - Adulto 2222"
                          valorUnitario: 15
                          receitas:
                            - idReceita: 3419
                              nomeReceita: "Limber - API - Atrativos"
                              valor: 15
                        - idCategoria: 3832
                          nomeCategoria: "API - Meia Entrada 222"
                          valorUnitario: 7
                          receitas:
                            - idReceita: 3419
                              nomeReceita: "Limber - API - Atrativos"
                              valor: 7
                      imagens:
                        - urlImg: "https://cdntestes.limbersoftware.com.br/img/bilhetes/4671/8xwN6VlWCP.webp"
                          mostrarGaleria: true
                          mostrarHome: true
                          vibrantColor: "#7f7f7f"
                      temporadas:
                        - temporada: 1
                          nome: "Disponível"
                          corCalendario: "#37ff00"
                    - sku: 4669
                      nome: "Acesso ao Parque - Completo"
                      ativo: "S"
                      controlaHorarios: "N"
                      categorias:
                        - idCategoria: 3831
                          nomeCategoria: "API - Adulto 2222"
                          valorUnitario: 0.11
                          receitas:
                            - idReceita: 3424
                              nomeReceita: "Limber - API - Visitantes"
                              valor: 0.11
                        - idCategoria: 3832
                          nomeCategoria: "API - Meia Entrada 222"
                          valorUnitario: 10
                          receitas:
                            - idReceita: 3424
                              nomeReceita: "Limber - API - Visitantes"
                              valor: 10
                      locaisEmbarque:
                        - localEmbarque: 2
                          nomeLocalEmbarque: "Portao Principal"
                          descricao: "Aberta 24h"
                        - localEmbarque: 1
                          nomeLocalEmbarque: "Entrada Norte"
                          descricao: "Aberto apenas em horário comercial"
                      temporadas:
                        - temporada: 1
                          nome: "Alta Temporada"
                          corCalendario: "#ff0000"
                        - temporada: 2
                          nome: "Baixa Temporada"
                          corCalendario: "#00d5ff"
                    - sku: 4670
                      nome: "Acesso ao Parque - Simples"
                      ativo: "S"
                      controlaHorarios: "N"
                      categorias:
                        - idCategoria: 3831
                          nomeCategoria: "API - Adulto 2222"
                          valorUnitario: 0.11
                        - idCategoria: 3832
                          nomeCategoria: "API - Meia Entrada 222"
                          valorUnitario: 10
                      imagens:
                        - urlImg: "https://cdntestes.limbersoftware.com.br/img/bilhetes/4670/TUVfvGSEdn.webp"
                          mostrarGaleria: true
                          mostrarHome: true
                      temporadas:
                        - temporada: 1
                          nome: "Disponível"
                          corCalendario: "#ff0000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/consulta/disponibilidade/calendario:
    post:
      tags:
        - Consultas
      summary: Consulta Disponibilidade (Calendário)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datainicial
                - datafinal
                - sku
                - idparceiro
                - receita
              properties:
                datainicial:
                  type: string
                  format: date
                datafinal:
                  type: string
                  format: date
                sku:
                  type: integer
                meiovenda:
                  type: string
                idparceiro:
                  type: integer
            example:
              datainicial: "AAAA-MM-DD"
              datafinal: "AAAA-MM-DD"
              sku: 1234
              meiovenda: "WEB"
              idparceiro: 123
              receita: 1234
      responses:
        '200':
          description: Datas com disponibilidade (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisponibilidadeCalendarioItem'
              examples:
                exemplo:
                  value:
                    - data: "2019-04-01T00:00:00.000Z"
                      temporada: 1
                      disponivel: 7
                      locaisEmbarque: []
                      corTemporada: "#37ff00"
                      nomeTemporada: "Disponivel"
                      altaProcura: false
                    - data: "2019-04-02T00:00:00.000Z"
                      temporada: 1
                      disponivel: 10
                      locaisEmbarque: []
                      corTemporada: "#37ff00"
                      nomeTemporada: "Disponivel"
                      altaProcura: false
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/consulta/disponibilidade/calendario/geral:
    post:
      tags:
        - Consultas
      summary: Consulta Disponibilidade Calendário Geral (por mês)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mes
                - idParceiro
                - codigoec
                - divisao

              properties:
                mes: 
                  type: string
                  example: "MM/AAAA"
                idParceiro:
                  type: integer
                  example: 123
                codigoec:
                  type: number
                  example: 123
                divisao:
                  type: number
                  example: 123
                datafim:
                  type: date
                  example: "AAAA-MM-DD"
                dataini:
                  type: date
                  example: "AAAA-MM-DDD"
                
            example:
              mes: "MM/AAAA"
              idparceiro: 123
              codigoec: 123
              divisao: 123
              datafim: "AAAA-MM-DD"
              dataini: "AAAA-MM-DD"

      responses:
        '200':
          description: Disponibilidade por dia do mês (formato específico por cliente)
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/consulta/disponibilidade/estoque:
    post:
      tags:
        - Consultas
      summary: Consulta Disponibilidade (Estoque de um SKU)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - sku
                - idParceiro
              properties:
                data:
                  type: string
                  format: date
                dataFim:
                  type: string
                  format: date
                sku:
                  type: integer
                idParceiro:
                  type: integer
                meioVenda:
                  type: string
                localEmbarque:
                  type: integer
                  nullable: true
                quantidade:
                  type: integer
                  nullable: true
            example:
              data: "2019-04-01"
              sku: 123456
              idParceiro: 0
              meioVenda: "WEB"
      responses:
        '200':
          description: Horários com disponibilidade (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisponibilidadeEstoqueItem'
              examples:
                exemplo:
                  value:
                    - temporada: 2
                      prog_horario: 55
                      prog_seq: 68
                      horaembarqueinicial: "1970-01-01T11:20:00.000Z"
                      horaembarquefinal: "1970-01-01T11:25:00.000Z"
                      disponivel: 36
                      descricao: "<descrição da vaga>"
                      idiomas: "Português,Inglês"
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/consulta/disponibilidade/estoqueagrupado:
    post:
      tags:
        - Consultas
      summary: Consulta Disponibilidade Agrupada (Estoque de um SKU)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: date
                dataFim:
                  type: string
                  format: date
                sku:
                  type: integer
                idParceiro:
                  type: integer
                meiovenda:
                  type: string
                quantidade:
                  type: integer
                localEmbarque:
                  type: integer
                sessao:
                  type: integer
            example:
              data: "2019-04-01"
              sku: 123456
              idParceiro: 0
              meiovenda: "WEB"
      responses:
        '200':
          description: Horários agrupados (array)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    progseq:
                      type: integer
                      example: 1
                    proghorario:
                      type: integer
                      example: 1
                    disponivel:
                      type: integer
                      example: 12
                    temporada:
                      type: integer
                      example: 1
                    horaembarqueinicial:
                      type: string
                      example: "10:00:00"
                    horaembarquefinal:
                      type: string
                      example: "11:00:00"
                    idiomas:
                      type: string
                      example: "Português,Inglês"
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/consulta/configpreco:
    post:
      tags:
        - Consultas
      summary: Consulta de preço SKU (configuração de preço)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                dataFim:
                  type: string
                sku:
                  type: integer
                receita:
                  type: integer
                idparceiro:
                  type: integer
                localembarque:
                  type: integer
                sessao:
                  type: integer
            example:
              data: "2019-04-01T00:00:00.000Z"
              sku: 123456
              idparceiro: 0
              meioVenda: "WEB"
      responses:
        '200':
          description: Preço e categorias do SKU
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idCategoria:
                      type: integer
                    nomeCategoria:
                      type: string
                    valorUnitario:
                      type: number
                    receitas:
                      type: array
                      items:
                        type: object
                        properties:
                          idReceita:
                            type: integer
                          nomeReceita:
                            type: string
                          valor:
                            type: number
              examples:
                exemplo:
                  value:
                    - idCategoria: 123456
                      nomeCategoria: "GRINGO"
                      valorUnitario: 111.11
                      receitas:
                        - idReceita: 123456
                          nomeReceita: "VILA NOVA"
                          valor: 111.11
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/integra/venda:
    post:
      tags:
        - Reserva/Venda
      summary: Reserva / Integra Venda (gera localizador)
      security:
        - bearerAuth: []
      description: |
        Faz uma reserva de ingressos (gera localizador). Normalmente válida por ~15 Minutos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservaRequest'
            example:
              dataHora: "2025-10-01T11:00:00.000"
              totalLiquido: 100.5
              idParceiro: 1234
              titularNome: "João da Silva"
              titularDoc: "12345678900"
              titularEmail: "joao@example.com"
              ingressos:
                - seq: 1
                  sku: 123456
                  idCategoria: 9999
                  valorUnitario: 111.11
                  qrCode: "SFTE_0001"
      responses:
        '200':
          description: Reserva criada (retorna localizador e ingressos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservaResponse'
              examples:
                sucesso:
                  value:
                    localizador: "LMBR-20251001-ABC123"
                    validade: "2025-10-01T12:00:00.000"
                    totalLiquido: 100.5
                    ingressos:
                      - seq: 1
                        sku: 123456
                        idCategoria: 9999
                        valorUnitario: 111.11
                        qrCode: "SFTE_0001"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/inutilizacao:
  post:
    tags:
      - Reserva/Venda
    summary: Inutilização / Inutiliza Venda
    security:
      - bearerAuth: []
    description: |
      Inutiliza uma reserva de ingressos e seus QRcodes.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              localizador:
                type: string
              idParceiro:
                type: integer
              motivoCancelamento:
                type: string
            required:
              - localizador
              - idParceiro
              - motivoCancelamento
          example:
            localizador: "<Localizador>"
            idParceiro: 1234
            motivoCancelamento: "Desistência da compra"
    responses:
      '200':
        description: Reserva inutilizada
        content:
          application/json:
            schema:
              type: object
              properties:
                localizador:
                  type: string
                status:
                  type: string
            examples:
              sucesso:
                value:
                  localizador: "LB99999999"
                  status: "X"
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/confirmacao:
    post:
      tags:
        - Reserva/Venda
      summary: Confirmação / Transforma reserva em venda
      security:
        - bearerAuth: []
      description: |
        Confirma uma reserva e registra a venda. É necessário ter um localizador válido.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                localizador:
                  type: string
                idParceiro:
                  type: integer
                formaPag:
                  type: integer
                cartaoBandeira:
                  type: string
                cartaoNSU:
                  type: integer
                cartaoAutorizacao:
                  type: string
                parcelas:
                  type: integer
                comprovantePagamento:
                  type: string
                dataHoraAutorizacao:
                  type: string
                  format: date-time
              required:
                - localizador
                - idParceiro
                - formaPag
      responses:
        '200':
          description: Reserva confirmada e transformada em venda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/remarcacao:
    post:
      tags:
        - Reserva/Venda
      summary: Remarcação de Reserva
      security:
        - bearerAuth: []
      description: |
        Altera os dados de visita de uma reserva. Necessário que a reserva esteja com o status de pagamento "Aprovada".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                localizador:
                  type: string
                idParceiro:
                  type: integer
                ingressos:
                  type: array
                  items:
                    type: object
                    properties:
                      seq:
                        type: integer
                      docVisitante:
                        type: string
                      tipodocumento:
                        type: string
                      nomeVisitante:
                        type: string
                      telefone:
                        type: string
                      datanasc:
                        type: string
                      receitas:
                        type: array
                        items:
                          type: object
                          properties:
                            seq:
                              type: integer
                            idReceita:
                              type: integer
                            dataVisita:
                              type: string
                              format: date
                            dataVisitaFinal:
                              type: string
                              format: date
                            horarioStr:
                              type: string
                            temporada:
                              type: integer
                            localEmbarque:
                              type: integer
      responses:
        '200':
          description: Reserva remarcada
          content:
            application/json:
              schema:
                type: object
                properties:
                  localizador:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/cross/leitura/qrCode/{{QrCode}}:
    get:
      tags:
        - Leitura/Utilização
      summary: Consultar dados do QrCode
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: QrCode
          required: true
          schema:
            type: string
          description: QRCode completo (ex "LMBR_393365650")
      responses:
        '200':
          description: Dados do ingresso e leituras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeReadResponse'
              examples:
                exemplo:
                  value:
                    qrCode: "LMBR_393365650"
                    bilhete: "Passe Comunidade Foz do Iguaçu"
                    categoria: "Adulto"
                    utilizacoes:
                      - idLeitura: 11
                        usoDataHora: "2023-12-08T09:13:11.000Z"
                        usoTerminal: "TERMINAL"
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/utilizacao:
    get:
      tags:
        - Leitura/Utilização
      summary: Consulta de Vendas por utilização, leituras ou data de visita
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: idParceiro
          schema:
            type: integer
          description: ID do parceiro para filtrar
        - in: query
          name: dataHoraUso
          schema:
            type: string
            description: Data e hora de utilização (ISO)
        - in: query
          name: dataVisita
          schema:
            type: string
            description: Data de visita (ISO)
        - in: query
          name: dataHoraLeitura
          schema:
            type: string
            description: Data/Hora da leitura do ingresso (ISO)
      responses:
        '200':
          description: Lista de vendas / itens correspondentes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UtilizacaoItem'
              examples:
                exemplo:
                  value:
                    - codigo: 1234
                      status: "X"
                      statusDesc: "Inutilizada (Não confirmou o Pagamento)"
                      itens:
                        - sequencia: 1
                          qrCode: "LMBR_393365650"
                          bilhete: "Passe Comunidade Foz do Iguaçu"
                          categoria: "Adulto"
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/cross/pedidoCancelamento/{{idVenda}}:
    post:
      tags:
        - Cancelamento
      summary: Pedido de Cancelamento
      security:
        - bearerAuth: []
      description: |
        ETAPA 1: Faz o pedido de cancelamento de um ou mais itens dentro da mesma venda.
        Pode ser utilizado mais de uma vez apenas com ingressos que estão aprovados.
        Não pode ser feito com itens lidos (qrCodes).

        *Cada pedido de cancelamento gera uma Sequência (seq) com os itens da venda dentro.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  example: "Solicitado pelo cliente"
                itens:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
                gera_credito: 
                  type: string
                  example: false
                pagamentos:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
            
      responses:
        '200':
          description: Pedido de cancelamento realizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  venda:
                    type: number
                    example: 48831772
                  itensAtualizados:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: number
                          example: 1
                        cancelamentos_codigo:
                          type: array
                          items:
                            type: number
                            example: 1

            
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedInvalid'

  /api/pagamentos/cancelamento/manual:
    post:
      tags:
        - Cancelamento
      summary: Cancelamento Manual
      security:
        - bearerAuth: []
      description: |
        ETAPA 1: Faz o pedido de cancelamento de um ou mais itens dentro da mesma venda.
        Pode ser utilizado mais de uma vez apenas com ingressos que estão aprovados.
        Não pode ser feito com itens lidos (qrCodes).

        *Cada pedido de cancelamento gera uma Sequência (seq) com os itens da venda dentro.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  example: "Solicitado pelo cliente"
                itens:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
                gera_credito: 
                  type: string
                  example: false
                pagamentos:
                  type: array
                  items:
                    type: object
                    properties:
                      sequencia:
                        type: integer
                        example: 1
            
      responses:
        '200':
          description: Pedido de cancelamento realizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  venda:
                    type: number
                    example: 48831772
                  itensAtualizados:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: number
                          example: 1
                        cancelamentos_codigo:
                          type: array
                          items:
                            type: number
                            example: 1

  /api/pagamentos/cancelamento/cancelarAdquirente:
      post:
        tags:
          - Cancelamento
        summary: Cancelar uma reserva pelo adquirente
        security:
          - bearerAuth: []
        description: |
          ETAPA 1: Faz o pedido de cancelamento de um ou mais itens dentro da mesma venda.
          Pode ser utilizado mais de uma vez apenas com ingressos que estão aprovados.
          Não pode ser feito com itens lidos (qrCodes).

          *Cada pedido de cancelamento gera uma Sequência (seq) com os itens da venda dentro.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  motivo:
                    type: string
                    example: "Solicitado pelo cliente"
                  itens:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: integer
                          example: 1
                  gera_credito: 
                    type: string
                    example: false
                  pagamentos:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: integer
                          example: 1
              
        responses:
          '200':
            description: Pedido de cancelamento realizado
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    venda:
                      type: number
                      example: 48831772
                    itensAtualizados:
                      type: array
                      items:
                        type: object
                        properties:
                          sequencia:
                            type: number
                            example: 1
                          cancelamentos_codigo:
                            type: array
                            items:
                              type: number
                              example: 1
              
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/UnauthorizedInvalid'

  /api/pagamentos/cancelamento/confirmaDevolucaoAdquirente:
      patch:
        tags:
          - Cancelamento
        summary: Verificar cancelamento com adquirente
        security:
          - bearerAuth: []
        description: |
          ETAPA 1: Faz o pedido de cancelamento de um ou mais itens dentro da mesma venda.
          Pode ser utilizado mais de uma vez apenas com ingressos que estão aprovados.
          Não pode ser feito com itens lidos (qrCodes).

          *Cada pedido de cancelamento gera uma Sequência (seq) com os itens da venda dentro.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  motivo:
                    type: string
                    example: "Solicitado pelo cliente"
                  itens:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: integer
                          example: 1
                  gera_credito: 
                    type: string
                    example: false
                  pagamentos:
                    type: array
                    items:
                      type: object
                      properties:
                        sequencia:
                          type: integer
                          example: 1
              
        responses:
          '200':
            description: Pedido de cancelamento realizado
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    venda:
                      type: number
                      example: 48831772
                    itensAtualizados:
                      type: array
                      items:
                        type: object
                        properties:
                          sequencia:
                            type: number
                            example: 1
                          cancelamentos_codigo:
                            type: array
                            items:
                              type: number
                              example: 1
              
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/UnauthorizedInvalid'

externalDocs:
  description: Informações de erros e uso
  url: "https://testescard.limbersoftware.com.br"
